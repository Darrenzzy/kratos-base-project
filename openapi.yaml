# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/apps/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Admin
    version: 0.0.1
paths:
    /admin/v1/getAdministratorInfo:
        get:
            summary: 获取管理员信息
            operationId: Admin_GetAdministratorInfo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAdministratorInfoReply'
    /admin/v1/goods:
        get:
            summary: 商品列表
            operationId: Admin_ListGoods
            parameters:
                - name: page_num
                  in: query
                  schema:
                    type: string
                - name: page_size
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
                - name: style
                  in: query
                  schema:
                    type: string
                - name: size
                  in: query
                  schema:
                    type: string
                - name: code
                  in: query
                  schema:
                    type: string
                - name: deleted_at
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListGoodsReply'
        put:
            summary: 更新商品
            operationId: Admin_UpdateGoods
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGoodsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GoodsInfoResponse'
        post:
            summary: 创建商品
            operationId: Admin_CreateGoods
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateGoodsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GoodsInfoResponse'
        patch:
            summary: 恢复商品
            operationId: Admin_RecoverGoods
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RecoverGoodsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GoodsCheckResponse'
    /admin/v1/goods/sale:
        post:
            summary: 商品出售
            operationId: Admin_SaleGoods
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SaleGoodsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SaleGoodsReply'
    /admin/v1/goods/sale/logs:
        get:
            summary: 商品出售列表
            operationId: Admin_SaleGoodsLogList
            parameters:
                - name: page_num
                  in: query
                  schema:
                    type: string
                - name: page_size
                  in: query
                  schema:
                    type: string
                - name: goods_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SaleGoodsLogListReply'
    /admin/v1/goods/{id}:
        get:
            summary: 商品详情
            operationId: Admin_GetGoods
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GoodsInfoResponse'
        delete:
            summary: 删除商品
            operationId: Admin_DeleteGoods
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GoodsCheckResponse'
    /admin/v1/login:
        post:
            summary: 管理员登陆
            operationId: Admin_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
    /admin/v1/logout:
        post:
            summary: 管理员退出
            operationId: Admin_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Empty'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
components:
    schemas:
        CreateGoodsRequest:
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                style:
                    type: string
                size:
                    type: string
                code:
                    type: string
                price:
                    type: number
                    format: float
                number:
                    type: integer
                    format: int64
        Empty:
            properties: {}
            description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:     service Foo {       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);     } The JSON representation for `Empty` is empty JSON object `{}`.'
        GetAdministratorInfoReply:
            properties:
                id:
                    type: integer
                    format: int64
                username:
                    type: string
                mobile:
                    type: string
                nickname:
                    type: string
                avatar:
                    type: string
                status:
                    type: integer
                    format: int64
                created_at:
                    type: string
                updated_at:
                    type: string
                deleted_at:
                    type: string
        GoodsCheckResponse:
            properties:
                is_success:
                    type: boolean
        GoodsInfoResponse:
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                style:
                    type: string
                size:
                    type: string
                code:
                    type: string
                price:
                    type: number
                    format: float
                number:
                    type: integer
                    format: int64
                created_at:
                    type: string
                updated_at:
                    type: string
                deleted_at:
                    type: string
        ListGoodsReply:
            properties:
                total:
                    type: integer
                    format: int64
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoodsInfoResponse'
        LoginReply:
            properties:
                token:
                    type: string
        LoginRequest:
            properties:
                username:
                    type: string
                password:
                    type: string
        RecoverGoodsRequest:
            properties:
                id:
                    type: integer
                    format: int64
        SaleGoodsLog:
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                style:
                    type: string
                size:
                    type: string
                code:
                    type: string
                price:
                    type: number
                    format: float
                number:
                    type: integer
                    format: int64
                created_at:
                    type: string
        SaleGoodsLogListReply:
            properties:
                total:
                    type: integer
                    format: int64
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/SaleGoodsLog'
        SaleGoodsReply:
            properties:
                is_success:
                    type: boolean
        SaleGoodsRequest:
            properties:
                id:
                    type: integer
                    format: int64
                number:
                    type: integer
                    format: int64
        UpdateGoodsRequest:
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                style:
                    type: string
                size:
                    type: string
                code:
                    type: string
                price:
                    type: number
                    format: float
                number:
                    type: integer
                    format: int64
